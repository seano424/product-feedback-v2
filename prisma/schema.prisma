generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int          @id @default(autoincrement())
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  email       String?      @unique
  password    String
  firstName   String
  lastName    String
  username    String       @unique
  image       String?
  comments    Comment[]
  suggestions Suggestion[]
  votes       Vote[]
}

model Suggestion {
  id          Int       @id @default(autoincrement())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  title       String    @unique
  description String
  votes       Vote[]
  userId      Int
  user        User      @relation(fields: [userId], references: [id])
  category    Category  @relation(fields: [categoryId], references: [id])
  comments    Comment[]
  status      Status    @relation(fields: [statusType], references: [type])
  statusType  String
  categoryId  Int
}

model Vote {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  suggestion   Suggestion? @relation(fields: [suggestionId], references: [id])
  suggestionId Int?
  user         User?       @relation(fields: [userId], references: [id])
  userId       Int?
}

model Comment {
  id           Int        @id @default(autoincrement())
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  body         String
  userId       Int
  suggestionId Int
  suggestion   Suggestion @relation(fields: [suggestionId], references: [id])
  user         User       @relation(fields: [userId], references: [id])
}

model Category {
  id           Int          @id @default(autoincrement())
  name         String       @unique
  suggestionId Int?
  type         String
  suggestions  Suggestion[]
}

model Status {
  type        String       @unique
  name        String       @unique
  suggestions Suggestion[]
}
